# ------------------------------------
#   If you need English case, you can refer to [s_en.yaml] file
# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc
#   组件帮助文档：https://www.serverless-devs.com/fc/readme
#   Yaml参考文档：https://www.serverless-devs.com/fc/yaml/readme
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://www.serverless-devs.com/fc/tips
#   关于如何做CICD等问题，可以参考：https://www.serverless-devs.com/serverless-devs/cicd
#   关于如何进行环境划分等问题，可以参考：https://www.serverless-devs.com/serverless-devs/extend
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------
edition: 1.0.0
name: hello-world-app
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: default

vars: # 全局变量
  region: cn-hangzhou
  service:
    name: hello-world-service
    description: hello world by serverless devs

actions:
  pre-${regx('.')}:
    - plugin: ${path('../plugin/a.js')}
      args:
        testKey: testValue
    - run: echo global pre ${vars.region}-${env('desc')}
    - run: npm run error
      path: './'
  success-deploy:
    - run: echo success-deploy
  complete-${regx('deploy')}:
    - run: echo complete-deploy
    - plugin: ${path('../plugin/a.js')}
      args:
        testKey: testValue
  fail-deploy:
    - run: echo fail-${vars.region}-${env('desc')}
    - plugin: ${path('../plugin/a.js')}
      args:
        testKey: testValue

resources:
  helloworld: # 业务名称/模块名称
    component: v3test # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    actions:
      pre-${regx('.')}:
        - run: echo helloworld ${vars.region}-${env('desc')}-${this.props.service.name}-${this.props.function.name}
        - plugin: ${path('../plugin/a.js')}
          args:
            testKey: testValue
        - plugin: ${path('../plugin/b.js')}
          args:
            testKey: testValue
      success-deploy:
        - run: echo success-deploy
      complete-${regx('deploy')}:
        - run: echo complete-deploy
        - plugin: ${path('../plugin/a.js')}
          args:
            testKey: testValue
        - component: v3test deploy
      fail-deploy:
        - run: echo fail-${vars.region}-${env('desc')}
        - plugin: ${path('../plugin/a.js')}
          args:
            testKey: testValue
    props:
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: A
        description: hello world by serverless devs
        runtime: nodejs14
        codeUri: ./code
        handler: index.handler
        memorySize: 128
        timeout: 60
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*
              methods:
                - GET
                - POST
  next-helloworld: # 业务名称/模块名称
    component: v3test # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    actions:
      pre-${regx('.')}:
        # - run: npm run error
        - run: echo next-helloworld ${vars.region}-${env('desc')}-${this.props.service.name}-${this.props.function.name}-${helloworld.output.hello}
        - plugin: ${path('../plugin/a.js')}
          args:
            testKey: testValue
        - plugin: ${path('../plugin/b.js')}
          args:
            testKey: testValue
      success-deploy:
        - run: echo success-deploy--${this.props.service.name}-${this.props.function.name}-${this.output.hello}-${helloworld.output.hello}
      complete-${regx('deploy')}:
        - run: echo complete-deploy
        - plugin: ${path('../plugin/a.js')}
          args:
            testKey: testValue
        - component: v3test deploy -e '{"word_file":"example.docx"}'
      fail-deploy:
        - run: echo fail-${vars.region}-${env('desc')}
        - plugin: ${path('../plugin/a.js')}
          args:
            testKey: testValue
    props:
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: B
        description: hello world by serverless devs
        runtime: nodejs14
        codeUri: ./code
        handler: index.handler
        memorySize: 128
        timeout: 60
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*
              methods:
                - GET
                - POST